#!/bin/bash

WORKDIR=$(cd $(dirname $0)/../; pwd)
SOURCE=${WORKDIR}/data
TARGET=${WORKDIR}

cd ${WORKDIR}

. ./bin/common

RUNTIME=${WORKDIR}/storage/runtime
BACKUP=${WORKDIR}/storage/backup

FILES=$(
for pattern in ${PATTERNS[@]} ; do
    find ${SOURCE}/${pattern} -type f | tr '\n' ' '
done
)

rm -fr ${RUNTIME} ${BACKUP}
mkdir -p ${RUNTIME} ${BACKUP}
touch ${BACKUP}/diff.log

for FILE in ${FILES[@]}; do
    DIST_PATH=${TARGET}/${FILE#${SOURCE}/}
    DECR_PATH=${RUNTIME}/${FILE#${SOURCE}/}
    BACKUP_PATH=${BACKUP}/${FILE#${SOURCE}/}

    mkdir -p $(dirname ${DIST_PATH})
    mkdir -p $(dirname ${DECR_PATH})

    gpg --quiet --yes -r ${RECIPIENT} -o ${DECR_PATH} -d ${FILE}

    if [ -f ${DIST_PATH} ]; then
        HASH_DIST=$(git hash-object ${DIST_PATH})
        HASH_DECR=$(git hash-object ${DECR_PATH})
        if [ "${HASH_DIST}" == "${HASH_DECR}" ]; then
            continue
        else
            mkdir -p $(dirname ${BACKUP_PATH})
            DIFF=$(git diff --no-index ${DIST_PATH} ${DECR_PATH})
            yes | cp -rf ${DIST_PATH} ${BACKUP_PATH} 2>/dev/null || :
            echo -e "${DIFF}" >> ${BACKUP}/diff.log
        fi
    fi

    yes | cp -rf ${DECR_PATH} ${DIST_PATH} 2>/dev/null || :

done

while IFS= read -r line
do
    LINE=(${line})
    if [[ "${LINE[1]}" =~ ^[0-9]+$ ]]; then
        find ${TARGET}/${LINE[0]} -type f -exec chmod ${LINE[1]} {} \;
    fi
done < .config

rm -fr ${RUNTIME}

cat ${BACKUP}/diff.log 2>/dev/null || :
